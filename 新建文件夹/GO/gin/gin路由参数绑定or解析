package main

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// binding:"required"修饰字段，为空就报错
type Login struct {
	User     string `form:"username" json:"username" uri:"username" xml:"username" binding:"required"`
	Password string `form:"password" json:"password" uri:"password" xml:"password" binding:"required"`
}

func main() {
	r := gin.Default()
	r.GET("login/:username/:password", func(c *gin.Context) {
		var form Login
		if err := c.ShouldBindUri(&form); err != nil {
			c.JSON(http.StatusBadRequest, gin.H{"status": 304})
			return
		}
		if form.Password != "admin" && form.User != "root" {
			c.JSON(http.StatusBadRequest, gin.H{"status": "304"})
			return
		}

		c.JSON(http.StatusOK, gin.H{"status": 200, "user": form.User, "pass": form.Password})
	})
	r.POST("/loginJSON", func(c *gin.Context) {
		var form Login

		if err := c.Bind(&form); err != nil {
			c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
			return
		}

		if err := c.ShouldBindJSON(&form); err != nil {
			c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
			return
		}

		if form.User != "root" || form.Password != "admin" {
			c.JSON(http.StatusBadRequest, gin.H{"status": "304"})
			return
		}

		c.JSON(http.StatusOK, gin.H{"status": "200"})
	})
	r.Run("localhost:8000")
}
